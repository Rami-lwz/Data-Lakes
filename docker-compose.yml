version: "3.8"

services:
  ###########################################################################
  # POSTGRES
  ###########################################################################
  postgres:
    image: postgres:14
    container_name: postgres
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=maindb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  ###########################################################################
  # MONGODB
  ###########################################################################
  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  ###########################################################################
  # MINIO
  ###########################################################################
  minio:
    image: minio/minio
    container_name: minio
    command: server /data --console-address ":9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    ports:
      - "9000:9000"   # MinIO S3-compatible API
      - "9001:9001"   # MinIO console UI
    volumes:
      - minio_data:/data
  ###########################################################################
  # MINIO SETUP (Bucket creation)
  ###########################################################################
  minio-setup:
    image: minio/mc
    container_name: minio-setup
    depends_on:
      - minio
    restart: "no"
    entrypoint: >
      /bin/sh -c "
      echo '--- Waiting 10s for MinIO to be ready...';
      sleep 10;

      echo '--- Creating buckets...';
      mc alias set myminio http://minio:9000 minioadmin minioadmin;
      mc mb --region=us-east-1 myminio/raw-bucket || echo 'raw-bucket already exists';
      mc mb --region=us-east-1 myminio/staging-bucket || echo 'staging-bucket already exists';
      mc mb --region=us-east-1 myminio/curated-bucket || echo 'curated-bucket already exists';

      echo '--- Buckets created/verified. Exiting now.';
      "

    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin

  ###########################################################################
  # AIRFLOW (en mode single-container pour plus de simplicité)
  ###########################################################################
  airflow:
    build:
      context: .
      dockerfile: ./DockerFiles/Airflow/Dockerfile.airflow
    container_name: airflow
    depends_on:
      - postgres
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://admin:admin@postgres:5432/maindb
      - AIRFLOW__CORE__FERNET_KEY="GH6NOdg_nafT5exv5AD33vQD-nNRnV2HfFFut7nToeE="
      - AIRFLOW__WEBSERVER__SECRET_KEY=some_random_secret_key
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW__CORE__DEFAULT_TIMEZONE=UTC
    ports:
      - "8080:8080"
    command: >
      bash -c "
      airflow db migrate &&
      airflow connections create-default-connections &&
      airflow users create \
        --username admin \
        --password admin \
        --firstname Admin \
        --lastname User \
        --role Admin \
        --email admin@example.com &&
      airflow scheduler &
      airflow webserver --port 8080
      "
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins


  ###########################################################################
  # API FLASK
  ###########################################################################
  api:
    build: ./DockerFiles/api/Dockerfile.api
    container_name: flask_api
    depends_on:
      - postgres
      - mongodb
      - minio
    ports:
      - "8000:8000"
    environment:
      # Variables pour la connexion à MinIO
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin

      # Variables pour la connexion à PostgreSQL
      - POSTGRES_URI=postgresql+psycopg2://admin:admin@postgres:5432/maindb

      # Variables pour la connexion à Mongo
      - MONGO_URI=mongodb://mongodb:27017

volumes:
  postgres_data:
  mongo_data:
  minio_data:
